var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/injectables/AuthService.html",[0,1.042,1,1.042]],["body/injectables/AuthService.html",[0,1.121,1,0.747,2,0.268,3,0.268,4,0.211,5,1.017,6,0.211,7,0.493,8,2.174,9,2.402,10,2.402,11,1.525,12,1.525,13,3.281,14,0.506,15,1.121,16,1.121,17,0.937,18,0.747,19,1.802,20,1.494,21,0.949,22,1.823,23,1.121,24,0.061,25,0.593,26,0.475,27,0.963,28,1.448,29,1.802,30,1.094,31,1.823,32,2.574,33,1.004,34,1.101,35,1.823,36,2.402,37,1.565,38,1.565,39,1.179,40,1.802,41,1.823,42,0.381,43,1.83,44,1.823,45,0.55,46,1.823,47,1.823,48,2.402,49,1.823,50,1.823,51,1.802,52,1.823,53,1.823,54,0.847,55,1.017,56,1.802,57,1.201,58,1.201,59,1.156,60,1.201,61,0.747,62,0.238,63,0.55,64,1.305,65,0.642,66,0.134,67,2.162,68,0.703,69,1.201,70,1.201,71,1.017,72,1.201,73,1.201,74,1.201,75,1.201,76,1.201,77,1.802,78,1.201,79,2.402,80,2.574,81,0.937,82,2.402,83,2.162,84,2.402,85,1.121,86,1.121,87,2.162,88,1.802,89,1.201,90,1.802,91,2.162,92,1.201,93,1.802,94,1.802,95,1.201,96,0.747,97,0.031,98,0.031]],["title/classes/AuthServiceConfig.html",[20,1.042,66,0.187]],["body/classes/AuthServiceConfig.html",[0,0.84,2,0.301,3,0.301,4,0.237,5,1.144,6,0.237,7,0.538,8,1.423,9,1.351,10,1.351,14,0.524,17,0.527,18,0.84,19,1.351,20,1.44,21,0.762,23,0.84,24,0.061,25,0.445,26,0.407,27,0.722,29,1.351,30,0.904,32,2.543,33,0.904,34,0.9,36,1.965,37,0.978,38,0.978,39,1.238,40,1.351,42,0.372,43,1.663,48,2.702,51,1.351,54,0.889,55,1.144,56,1.965,57,1.351,58,1.351,59,1.238,60,1.351,61,0.84,62,0.259,63,0.619,64,1.841,65,0.722,66,0.219,67,2.981,68,1.1,69,1.965,70,1.351,71,1.144,72,1.351,73,1.351,74,1.351,75,1.351,76,1.351,77,1.965,78,1.351,79,2.543,80,2.702,81,0.992,82,2.543,83,2.316,84,2.543,85,1.222,86,1.222,87,2.316,88,1.965,89,1.351,90,1.965,91,2.316,92,1.351,93,1.965,94,1.965,95,1.351,96,0.84,97,0.034,98,0.034,99,2.982,100,2.05]],["title/interfaces/AuthServiceConfigItem.html",[63,0.768,64,1.213]],["body/interfaces/AuthServiceConfigItem.html",[0,0.881,2,0.315,3,0.315,4,0.249,5,1.199,6,0.249,7,0.556,8,1.472,9,1.417,10,1.417,14,0.519,17,0.553,19,1.417,20,1.265,24,0.061,26,0.357,29,1.417,30,1.074,32,2.6,33,0.928,34,0.932,36,2.034,39,1.191,40,1.417,42,0.378,43,1.722,48,2.034,51,1.417,54,0.906,55,1.199,56,2.034,57,1.417,58,1.417,59,1.472,60,1.417,61,0.881,62,0.269,63,0.932,64,1.722,65,1.39,66,0.158,67,2.379,68,0.794,69,1.417,70,1.417,71,1.199,72,1.417,73,1.417,74,1.417,75,1.417,76,1.417,77,2.034,78,1.417,79,2.6,80,2.753,81,1.015,82,2.6,83,2.379,84,2.6,85,1.265,86,1.265,87,2.379,88,2.034,89,1.417,90,2.034,91,2.379,92,1.417,93,2.034,94,2.034,95,1.417,96,0.881,97,0.035,98,0.035]],["title/classes/BaseLoginProvider.html",[66,0.187,101,1.042]],["body/classes/BaseLoginProvider.html",[2,0.382,3,0.382,4,0.302,6,0.302,7,0.636,14,0.302,15,1.447,16,1.758,17,1.103,18,1.641,21,1.002,23,1.068,24,0.06,25,0.565,26,0.409,27,0.918,33,1.153,34,1.395,42,0.227,45,1.452,54,0.766,59,1.41,62,0.227,66,0.259,68,1.029,81,0.67,97,0.04,98,0.04,101,1.447,102,3.754,103,0.918,104,2.804,105,2.047,106,2.047,107,1.969,108,2.606,109,2.071,110,1.244,111,1.969,112,1.103,113,2.393,114,2.606,115,1.454,116,1.684,117,1.454,118,1.454,119,4.483,120,2.606,121,2.606,122,2.606,123,3.53,124,1.454,125,2.606,126,2.606,127,2.606,128,2.606,129,1.718,130,2.606,131,2.606,132,2.071,133,2.606,134,2.606]],["title/classes/FacebookLoginProvider.html",[66,0.187,135,1.419]],["body/classes/FacebookLoginProvider.html",[2,0.251,3,0.251,4,0.198,6,0.198,7,0.47,11,2.234,12,1.762,14,0.198,15,1.069,16,1.706,17,1.071,18,0.702,21,1.015,23,1.295,24,0.06,25,0.685,26,0.482,27,1.113,30,0.977,33,1.189,34,1.327,37,1.244,38,1.244,39,1.209,42,0.331,45,1.354,54,0.566,61,0.702,62,0.149,66,0.191,68,0.977,81,0.671,85,1.295,86,1.295,96,0.702,97,0.03,98,0.03,101,1.759,103,0.603,105,1.986,106,1.986,107,1.455,110,0.817,111,0.955,112,1.104,113,1.455,115,0.955,116,0.817,117,0.955,118,1.455,124,1.97,135,1.455,136,2.897,137,1.719,138,2.744,139,2.327,140,2.327,141,1.719,142,1.129,143,2.082,144,2.509,145,2.505,146,1.129,147,2.072,148,1.713,149,2.072,150,1.361,151,1.713,152,1.713,153,1.129,154,1.129,155,1.129,156,1.129,157,1.129,158,0.702,159,1.129,160,0.955,161,1.129,162,1.129,163,1.129,164,1.129,165,1.713,166,1.129,167,1.713,168,1.713,169,1.129,170,1.713,171,1.713,172,1.713,173,1.713,174,1.713,175,1.129,176,1.713,177,1.713,178,1.713,179,1.713,180,2.072,181,3.531,182,2.608,183,2.608,184,3.531,185,2.608,186,1.455,187,1.129,188,2.608,189,0.955,190,1.713,191,0.955,192,1.713,193,1.129,194,1.713,195,1.129,196,1.713,197,1.713,198,1.713,199,1.713,200,1.361,201,1.713,202,1.713]],["title/classes/GoogleLoginProvider.html",[66,0.187,203,1.419]],["body/classes/GoogleLoginProvider.html",[2,0.259,3,0.259,4,0.204,6,0.204,7,0.48,8,1.533,11,1.793,12,1.793,14,0.204,15,1.092,16,1.723,17,1.081,18,0.722,21,1.031,23,1.092,24,0.06,25,0.578,26,0.487,27,0.939,30,0.99,33,1.196,34,1.364,37,1.271,38,1.271,39,1.222,42,0.335,45,1.386,54,0.578,61,0.722,62,0.153,66,0.196,68,0.99,81,0.685,85,1.317,86,1.317,96,0.722,97,0.03,98,0.03,101,1.774,103,0.621,105,2.006,106,2.006,107,1.487,110,0.841,111,0.983,112,1.113,113,1.487,115,0.983,116,0.841,117,0.983,118,0.983,124,0.983,137,1.756,138,2.77,139,2.361,140,2.361,141,2.361,142,1.161,143,2.118,145,2.536,146,1.161,153,1.161,154,1.161,155,1.161,156,1.161,157,1.161,158,0.722,160,0.983,161,1.161,162,1.161,163,1.161,164,1.161,166,1.161,169,1.161,175,1.161,187,1.161,189,0.983,191,0.983,193,1.161,195,1.161,200,1.4,203,1.487,204,2.977,205,3.583,206,2.665,207,2.553,208,1.762,209,1.762,210,1.762,211,1.762,212,1.161,213,1.762,214,1.762,215,1.762,216,1.762,217,1.762,218,0.841,219,1.762,220,1.762,221,2.665,222,1.762,223,1.762,224,1.762,225,1.762,226,1.762,227,1.762,228,1.762,229,1.762,230,1.762,231,1.762,232,1.762,233,1.762,234,1.4,235,1.4]],["title/classes/LinkedInResponse.html",[66,0.187,236,1.042]],["body/classes/LinkedInResponse.html",[2,0.443,3,0.443,4,0.35,6,0.35,7,0.701,14,0.35,21,1.02,24,0.058,25,0.844,26,0.545,30,1.36,42,0.263,62,0.375,65,1.697,66,0.334,97,0.044,98,0.044,112,0.777,186,1.685,218,1.441,236,1.595,237,1.685,238,2.996,239,2.996,240,2.996,241,2.996,242,3.02,243,3.02,244,3.02,245,3.02,246,3.02,247,1.99,248,1.441]],["title/classes/LinkedinLoginProvider.html",[66,0.187,249,1.419]],["body/classes/LinkedinLoginProvider.html",[2,0.247,3,0.247,4,0.195,6,0.195,7,0.465,11,1.746,12,1.746,14,0.195,15,1.057,16,1.697,17,1.065,18,0.691,21,1.022,23,1.283,24,0.061,25,0.679,26,0.479,27,1.102,30,0.971,33,1.199,34,1.322,37,1.23,38,1.23,39,1.202,42,0.328,45,1.371,54,0.559,61,0.691,62,0.147,66,0.189,68,0.971,81,0.663,85,1.283,86,1.283,96,0.691,97,0.029,98,0.029,101,1.75,103,0.594,105,1.976,106,1.976,107,1.438,110,0.805,111,0.941,112,1.098,113,1.746,115,0.941,116,1.23,117,0.941,118,1.438,124,1.438,129,2.062,132,1.34,137,1.699,138,2.729,139,2.309,140,2.309,141,1.699,142,1.111,143,2.062,145,2.488,146,1.111,147,2.048,149,1.34,150,1.34,153,1.111,154,1.111,155,1.111,156,1.111,157,1.111,158,0.691,160,0.941,161,1.111,162,1.111,163,1.111,164,1.111,166,1.111,169,1.111,175,1.111,187,1.111,189,0.941,191,0.941,193,1.111,195,1.111,234,1.34,235,1.34,236,1.631,248,0.805,249,1.438,250,2.943,251,3.503,252,1.686,253,1.686,254,1.686,255,1.686,256,1.686,257,1.686,258,1.686,259,1.686,260,2.578,261,1.686,262,1.686,263,1.686,264,1.686,265,2.578,266,2.578,267,2.578,268,1.686,269,2.578,270,1.686,271,1.686,272,2.578,273,1.686,274,1.686,275,1.686,276,1.686,277,1.686,278,1.686,279,1.686,280,1.686]],["title/interfaces/LoginProvider.html",[59,0.896,63,0.768]],["body/interfaces/LoginProvider.html",[2,0.487,3,0.487,4,0.384,6,0.384,7,0.745,15,1.693,16,1.929,17,1.21,21,0.976,24,0.058,26,0.384,33,1.157,34,1.49,42,0.289,54,0.72,59,1.455,62,0.289,63,1.247,68,1.157,81,0.854,97,0.047,98,0.047,103,1.17,105,2.245,106,2.245,109,2.637,110,1.584,281,3.739,282,3.32]],["title/classes/LoginProviderClass.html",[66,0.187,112,0.654]],["body/classes/LoginProviderClass.html",[2,0.466,3,0.466,4,0.368,6,0.368,7,0.724,14,0.368,21,0.956,24,0.058,25,1.036,26,0.51,30,1.357,42,0.276,62,0.384,65,1.719,66,0.34,97,0.046,98,0.046,112,1.033,186,1.772,218,1.516,236,1.302,237,1.772,238,2.093,239,2.093,240,2.093,241,2.093,247,2.093,248,2.21,283,3.177,284,3.177,285,3.177]],["title/modules/SocialLoginModule.html",[286,1.042,287,1.213]],["body/modules/SocialLoginModule.html",[1,2.03,2,0.495,3,0.495,4,0.39,14,0.524,24,0.06,54,1.026,55,1.88,62,0.363,66,0.247,97,0.047,98,0.047,158,1.382,286,1.709,287,2.363,288,2.678,289,2.678,290,2.221,291,2.678,292,2.678,293,3.313,294,2.678,295,2.221,296,3.371,297,3.313,298,4.17,299,3.371,300,3.371]],["title/classes/SocialUser.html",[42,0.221,66,0.187]],["body/classes/SocialUser.html",[2,0.43,3,0.43,4,0.339,6,0.339,7,0.688,14,0.52,21,1.036,24,0.058,25,1.011,26,0.553,27,1.345,30,1.361,42,0.332,62,0.369,65,1.683,66,0.33,97,0.043,98,0.043,112,0.754,186,2.508,218,2.145,236,1.202,237,1.636,238,1.932,239,1.932,240,1.932,241,1.932,247,2.962,248,1.399,301,2.932,302,2.932,303,2.932,304,2.932,305,2.932,306,2.932]],["title/coverage.html",[307,2.757]],["body/coverage.html",[0,1.205,1,1.205,4,0.34,5,2.371,20,1.205,24,0.059,26,0.34,39,0.888,42,0.256,45,1.47,59,1.036,63,1.154,64,1.403,66,0.362,71,2.873,97,0.043,98,0.043,101,1.205,102,2.335,103,1.739,112,0.756,135,1.64,136,2.52,159,1.937,203,1.64,204,2.52,212,1.937,236,1.205,237,2.371,249,1.64,250,2.52,281,2.335,307,2.335,308,2.335,309,2.94,310,2.94,311,3.823,312,2.94,313,2.94,314,3.823,315,2.94,316,2.94,317,2.94,318,2.8,319,4.249,320,3.823,321,2.94,322,2.94]],["title/index.html",[6,0.246,323,1.687,324,1.687]],["body/index.html",[1,1.746,8,1.409,14,0.472,17,0.52,20,1.43,24,0.06,25,0.439,28,2.346,33,0.52,39,1.158,42,0.334,43,1.648,45,1.328,54,0.924,62,0.334,65,1.437,66,0.256,68,0.52,81,1.182,97,0.033,98,0.033,104,2.346,116,1.83,129,1.334,135,1.648,144,1.607,158,0.829,160,1.648,180,1.607,189,1.129,191,1.129,203,1.648,207,1.607,218,0.965,248,0.965,249,1.648,286,1.211,287,1.664,290,1.334,295,2.527,297,1.607,308,2.346,323,1.607,324,1.607,325,4.259,326,4.508,327,2.023,328,2.023,329,2.023,330,3.488,331,2.023,332,2.023,333,1.607,334,2.954,335,2.023,336,2.954,337,2.023,338,2.954,339,2.023,340,2.023,341,2.954,342,2.023,343,2.023,344,2.023,345,2.023,346,2.023,347,2.023,348,3.835,349,2.023,350,2.023,351,2.023,352,2.954,353,2.023,354,2.023,355,2.954,356,2.954,357,2.954,358,2.954,359,2.954,360,2.954,361,2.954,362,2.954,363,2.954,364,2.023,365,2.023,366,2.023,367,2.023,368,2.023,369,2.023,370,2.023,371,2.023,372,2.023,373,2.023,374,3.835,375,2.023,376,2.954,377,2.023,378,2.023,379,2.954,380,2.023,381,2.023,382,2.023,383,2.023,384,2.023,385,2.023,386,2.023,387,2.023,388,2.023,389,2.954,390,2.954,391,2.023,392,2.954,393,2.023,394,2.023,395,2.023,396,2.023,397,2.023,398,2.023,399,2.023]],["title/modules.html",[286,1.423]],["body/modules.html",[24,0.053,97,0.053,98,0.053,286,1.648,287,1.919,333,3.195,400,4.021,401,4.021,402,4.021]],["title/overview.html",[403,2.757]],["body/overview.html",[0,1.516,1,1.933,14,0.428,24,0.053,62,0.322,63,1.117,66,0.271,97,0.05,98,0.05,158,1.516,286,1.808,287,2.33,288,2.938,289,2.938,290,2.437,291,2.938,292,2.938,293,3.505,294,2.938,295,2.437,403,2.938,404,4.412,405,3.698,406,3.698]],["title/miscellaneous/variables.html",[318,2.016,407,1.687]],["body/miscellaneous/variables.html",[6,0.424,24,0.056,26,0.544,45,1.525,97,0.05,98,0.05,103,1.78,136,2.413,159,3.094,204,2.413,212,3.094,250,2.413,318,2.413,407,2.909,408,3.661,409,3.661,410,3.661]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedInResponse.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{},"classes/LoginProviderClass.html":{},"modules/SocialLoginModule.html":{},"classes/SocialUser.html":{},"coverage.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":71,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"coverage.html":{}}}],["0/1",{"_index":319,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":317,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":320,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":313,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":311,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":315,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":316,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":314,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":312,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":404,"title":{},"body":{"overview.html":{}}}],["2",{"_index":406,"title":{},"body":{"overview.html":{}}}],["4",{"_index":332,"title":{},"body":{"index.html":{}}}],["8",{"_index":405,"title":{},"body":{"overview.html":{}}}],["_authstat",{"_index":9,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["_user",{"_index":10,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["abstract",{"_index":119,"title":{},"body":{"classes/BaseLoginProvider.html":{}}}],["accessor",{"_index":50,"title":{},"body":{"injectables/AuthService.html":{}}}],["accesstoken",{"_index":181,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["address,pictur",{"_index":267,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["angular",{"_index":331,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":299,"title":{},"body":{"modules/SocialLoginModule.html":{}}}],["angular/cor",{"_index":55,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"modules/SocialLoginModule.html":{}}}],["angular4",{"_index":329,"title":{},"body":{"index.html":{}}}],["aot",{"_index":390,"title":{},"body":{"index.html":{}}}],["api_key",{"_index":132,"title":{},"body":{"classes/BaseLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["app",{"_index":348,"title":{},"body":{"index.html":{}}}],["appid",{"_index":168,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["appmodul",{"_index":341,"title":{},"body":{"index.html":{}}}],["auth",{"_index":261,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["auth.servic",{"_index":300,"title":{},"body":{"modules/SocialLoginModule.html":{}}}],["auth2",{"_index":205,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["authent",{"_index":330,"title":{},"body":{"index.html":{}}}],["author",{"_index":258,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["authresponseobj",{"_index":224,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["authresponseobj.access_token",{"_index":230,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["authservic",{"_index":1,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"modules/SocialLoginModule.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["authserviceconfig",{"_index":20,"title":{"classes/AuthServiceConfig.html":{}},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"coverage.html":{},"index.html":{}}}],["authserviceconfigitem",{"_index":64,"title":{"interfaces/AuthServiceConfigItem.html":{}},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"coverage.html":{}}}],["authstat",{"_index":51,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["autologappev",{"_index":170,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["autologin",{"_index":67,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["baseloginprovid",{"_index":101,"title":{"classes/BaseLoginProvider.html":{}},"body":{"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"coverage.html":{}}}],["baseloginprovider:11",{"_index":154,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["baseloginprovider:6",{"_index":146,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["baseloginprovider:7",{"_index":153,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["baseloginprovider:8",{"_index":155,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["baseloginprovider:9",{"_index":156,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["basic",{"_index":378,"title":{},"body":{"index.html":{}}}],["behaviorsubject",{"_index":36,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["behaviorsubject(nul",{"_index":40,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["boolean",{"_index":68,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{},"index.html":{}}}],["bootstrap",{"_index":290,"title":{},"body":{"modules/SocialLoginModule.html":{},"index.html":{},"overview.html":{}}}],["brows",{"_index":402,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":400,"title":{},"body":{"modules.html":{}}}],["build",{"_index":389,"title":{},"body":{"index.html":{}}}],["catch((err",{"_index":83,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["check",{"_index":334,"title":{},"body":{"index.html":{}}}],["class",{"_index":66,"title":{"classes/AuthServiceConfig.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedInResponse.html":{},"classes/LinkedinLoginProvider.html":{},"classes/LoginProviderClass.html":{},"classes/SocialUser.html":{}},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedInResponse.html":{},"classes/LinkedinLoginProvider.html":{},"classes/LoginProviderClass.html":{},"modules/SocialLoginModule.html":{},"classes/SocialUser.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["client",{"_index":345,"title":{},"body":{"index.html":{}}}],["client_id",{"_index":217,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["clientid",{"_index":143,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["cluster_socialloginmodul",{"_index":291,"title":{},"body":{"modules/SocialLoginModule.html":{},"overview.html":{}}}],["cluster_socialloginmodule_provid",{"_index":292,"title":{},"body":{"modules/SocialLoginModule.html":{},"overview.html":{}}}],["commonmodul",{"_index":298,"title":{},"body":{"modules/SocialLoginModule.html":{}}}],["compon",{"_index":355,"title":{},"body":{"index.html":{}}}],["config",{"_index":28,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["config.autologin",{"_index":75,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["config.provid",{"_index":74,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["connect",{"_index":179,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["const",{"_index":180,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"index.html":{}}}],["constructor",{"_index":18,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["constructor(clientid",{"_index":142,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["constructor(config",{"_index":19,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["constructor(priv",{"_index":160,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"index.html":{}}}],["constructor(provid",{"_index":69,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["contain",{"_index":377,"title":{},"body":{"index.html":{}}}],["contribut",{"_index":393,"title":{},"body":{"index.html":{}}}],["cooki",{"_index":171,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["coverag",{"_index":307,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":397,"title":{},"body":{"index.html":{}}}],["declar",{"_index":158,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"modules/SocialLoginModule.html":{},"index.html":{},"overview.html":{}}}],["default",{"_index":37,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["defin",{"_index":21,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedInResponse.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{},"classes/LoginProviderClass.html":{},"classes/SocialUser.html":{}}}],["demo",{"_index":357,"title":{},"body":{"index.html":{}}}],["demo.component.css",{"_index":361,"title":{},"body":{"index.html":{}}}],["demo.component.html",{"_index":359,"title":{},"body":{"index.html":{}}}],["democompon",{"_index":362,"title":{},"body":{"index.html":{}}}],["depend",{"_index":288,"title":{},"body":{"modules/SocialLoginModule.html":{},"overview.html":{}}}],["display",{"_index":388,"title":{},"body":{"index.html":{}}}],["doc",{"_index":335,"title":{},"body":{"index.html":{}}}],["document",{"_index":308,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["document.createelement('script",{"_index":122,"title":{},"body":{"classes/BaseLoginProvider.html":{}}}],["document.getelementbyid(obj.nam",{"_index":120,"title":{},"body":{"classes/BaseLoginProvider.html":{}}}],["document.head.appendchild(signinj",{"_index":134,"title":{},"body":{"classes/BaseLoginProvider.html":{}}}],["drawus",{"_index":141,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["drawuser(respons",{"_index":147,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["email",{"_index":218,"title":{},"body":{"classes/GoogleLoginProvider.html":{},"classes/LinkedInResponse.html":{},"classes/LoginProviderClass.html":{},"classes/SocialUser.html":{},"index.html":{}}}],["email,public_profil",{"_index":201,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["emailaddress",{"_index":238,"title":{},"body":{"classes/LinkedInResponse.html":{},"classes/LoginProviderClass.html":{},"classes/SocialUser.html":{}}}],["entities/bas",{"_index":157,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["entities/login",{"_index":60,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["entities/us",{"_index":61,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["err",{"_index":234,"title":{},"body":{"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["etc",{"_index":382,"title":{},"body":{"index.html":{}}}],["export",{"_index":62,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedInResponse.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{},"classes/LoginProviderClass.html":{},"modules/SocialLoginModule.html":{},"classes/SocialUser.html":{},"index.html":{},"overview.html":{}}}],["extend",{"_index":137,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["face",{"_index":391,"title":{},"body":{"index.html":{}}}],["facebook",{"_index":144,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"index.html":{}}}],["facebookloginprovid",{"_index":135,"title":{"classes/FacebookLoginProvider.html":{}},"body":{"classes/FacebookLoginProvider.html":{},"coverage.html":{},"index.html":{}}}],["facebookloginprovider('facebook",{"_index":347,"title":{},"body":{"index.html":{}}}],["facebookloginprovider.provider_id",{"_index":346,"title":{},"body":{"index.html":{}}}],["fals",{"_index":130,"title":{},"body":{"classes/BaseLoginProvider.html":{}}}],["fb",{"_index":159,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fb.api('/me?fields=name,email,pictur",{"_index":183,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["fb.appevents.logpageview",{"_index":176,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["fb.getauthresponse()['accesstoken",{"_index":182,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["fb.getloginstatus(funct",{"_index":177,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["fb.init",{"_index":167,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["fb.login((respons",{"_index":198,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["fb.logout((respons",{"_index":202,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["file",{"_index":4,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedInResponse.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{},"classes/LoginProviderClass.html":{},"modules/SocialLoginModule.html":{},"classes/SocialUser.html":{},"coverage.html":{}}}],["firstnam",{"_index":239,"title":{},"body":{"classes/LinkedInResponse.html":{},"classes/LoginProviderClass.html":{},"classes/SocialUser.html":{}}}],["found",{"_index":46,"title":{},"body":{"injectables/AuthService.html":{}}}],["function",{"_index":351,"title":{},"body":{"index.html":{}}}],["gapi",{"_index":212,"title":{},"body":{"classes/GoogleLoginProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gapi.auth2.init",{"_index":216,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["gapi.load('auth2",{"_index":214,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["get",{"_index":323,"title":{"index.html":{}},"body":{"index.html":{}}}],["getauthst",{"_index":52,"title":{},"body":{"injectables/AuthService.html":{}}}],["googl",{"_index":207,"title":{},"body":{"classes/GoogleLoginProvider.html":{},"index.html":{}}}],["googleloginprovid",{"_index":203,"title":{"classes/GoogleLoginProvider.html":{}},"body":{"classes/GoogleLoginProvider.html":{},"coverage.html":{},"index.html":{}}}],["googleloginprovider('googl",{"_index":343,"title":{},"body":{"index.html":{}}}],["googleloginprovider.provider_id",{"_index":342,"title":{},"body":{"index.html":{}}}],["https://apis.google.com/js/platform.j",{"_index":213,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["https://connect.facebook.net/en_us/sdk.j",{"_index":165,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["https://graph.facebook.com",{"_index":196,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["https://platform.linkedin.com/in.j",{"_index":256,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["id",{"_index":65,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/LinkedInResponse.html":{},"classes/LoginProviderClass.html":{},"classes/SocialUser.html":{},"index.html":{}}}],["identifi",{"_index":309,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":104,"title":{},"body":{"classes/BaseLoginProvider.html":{},"index.html":{}}}],["import",{"_index":54,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{},"modules/SocialLoginModule.html":{},"index.html":{}}}],["in.api.raw",{"_index":263,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["in.api.raw('/people/~:(id,first",{"_index":278,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["in.env.auth.oauth_token",{"_index":276,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["in.event.on(in",{"_index":260,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["in.init",{"_index":257,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["in.user.author",{"_index":277,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["in.user.isauthor",{"_index":262,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["in.user.logout((respons",{"_index":280,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["in.user.refresh",{"_index":271,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["index",{"_index":6,"title":{"index.html":{}},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedInResponse.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{},"classes/LoginProviderClass.html":{},"classes/SocialUser.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedInResponse.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{},"classes/LoginProviderClass.html":{},"modules/SocialLoginModule.html":{},"classes/SocialUser.html":{}}}],["inform",{"_index":379,"title":{},"body":{"index.html":{}}}],["inherit",{"_index":145,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["initi",{"_index":106,"title":{},"body":{"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{}}}],["inject",{"_index":0,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"coverage.html":{},"overview.html":{}}}],["instal",{"_index":336,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":63,"title":{"interfaces/AuthServiceConfigItem.html":{},"interfaces/LoginProvider.html":{}},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"interfaces/LoginProvider.html":{},"coverage.html":{},"overview.html":{}}}],["isiniti",{"_index":105,"title":{},"body":{"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{}}}],["issu",{"_index":392,"title":{},"body":{"index.html":{}}}],["key",{"_index":77,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["lastnam",{"_index":240,"title":{},"body":{"classes/LinkedInResponse.html":{},"classes/LoginProviderClass.html":{},"classes/SocialUser.html":{}}}],["legend",{"_index":289,"title":{},"body":{"modules/SocialLoginModule.html":{},"overview.html":{}}}],["librari",{"_index":328,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":129,"title":{},"body":{"classes/BaseLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"index.html":{}}}],["linkedinloginprovid",{"_index":249,"title":{"classes/LinkedinLoginProvider.html":{}},"body":{"classes/LinkedinLoginProvider.html":{},"coverage.html":{},"index.html":{}}}],["linkedinloginprovider('linkedin_client_id",{"_index":350,"title":{},"body":{"index.html":{}}}],["linkedinloginprovider.provider_id",{"_index":349,"title":{},"body":{"index.html":{}}}],["linkedinrespons",{"_index":236,"title":{"classes/LinkedInResponse.html":{}},"body":{"classes/LinkedInResponse.html":{},"classes/LinkedinLoginProvider.html":{},"classes/LoginProviderClass.html":{},"classes/SocialUser.html":{},"coverage.html":{}}}],["loadscript",{"_index":107,"title":{},"body":{"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["loadscript(obj",{"_index":111,"title":{},"body":{"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["log",{"_index":374,"title":{},"body":{"index.html":{}}}],["loggedin",{"_index":383,"title":{},"body":{"index.html":{}}}],["login",{"_index":45,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["login_provider_not_found",{"_index":13,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginimport",{"_index":340,"title":{},"body":{"index.html":{}}}],["loginprovid",{"_index":59,"title":{"interfaces/LoginProvider.html":{}},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/BaseLoginProvider.html":{},"interfaces/LoginProvider.html":{},"coverage.html":{}}}],["loginproviderclass",{"_index":112,"title":{"classes/LoginProviderClass.html":{}},"body":{"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedInResponse.html":{},"classes/LinkedinLoginProvider.html":{},"classes/LoginProviderClass.html":{},"classes/SocialUser.html":{},"coverage.html":{}}}],["loginproviderobj",{"_index":139,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["map",{"_index":48,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["match",{"_index":98,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedInResponse.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{},"classes/LoginProviderClass.html":{},"modules/SocialLoginModule.html":{},"classes/SocialUser.html":{},"coverage.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["method",{"_index":15,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{}}}],["miscellan",{"_index":407,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modul",{"_index":286,"title":{"modules/SocialLoginModule.html":{},"modules.html":{}},"body":{"modules/SocialLoginModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["name",{"_index":25,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedInResponse.html":{},"classes/LinkedinLoginProvider.html":{},"classes/LoginProviderClass.html":{},"classes/SocialUser.html":{},"index.html":{}}}],["name,email",{"_index":266,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["name,last",{"_index":265,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["new",{"_index":39,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"coverage.html":{},"index.html":{}}}],["ng4",{"_index":325,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":297,"title":{},"body":{"modules/SocialLoginModule.html":{},"index.html":{}}}],["ngoninit",{"_index":384,"title":{},"body":{"index.html":{}}}],["notifi",{"_index":373,"title":{},"body":{"index.html":{}}}],["npm",{"_index":338,"title":{},"body":{"index.html":{}}}],["null",{"_index":43,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"index.html":{}}}],["oauth",{"_index":344,"title":{},"body":{"index.html":{}}}],["obj",{"_index":115,"title":{},"body":{"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["obj.id).replac",{"_index":133,"title":{},"body":{"classes/BaseLoginProvider.html":{}}}],["obj.nam",{"_index":128,"title":{},"body":{"classes/BaseLoginProvider.html":{}}}],["obj.url",{"_index":126,"title":{},"body":{"classes/BaseLoginProvider.html":{}}}],["object",{"_index":376,"title":{},"body":{"index.html":{}}}],["observ",{"_index":56,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["oninit",{"_index":363,"title":{},"body":{"index.html":{}}}],["onlinkedinload",{"_index":251,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["onload",{"_index":113,"title":{},"body":{"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["option",{"_index":27,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"classes/SocialUser.html":{}}}],["out",{"_index":295,"title":{},"body":{"modules/SocialLoginModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":403,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["paramet",{"_index":23,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["people/~:(id,first",{"_index":264,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["photo",{"_index":381,"title":{},"body":{"index.html":{}}}],["photourl",{"_index":247,"title":{},"body":{"classes/LinkedInResponse.html":{},"classes/LoginProviderClass.html":{},"classes/SocialUser.html":{}}}],["picture?type=norm",{"_index":197,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["pictureurl",{"_index":241,"title":{},"body":{"classes/LinkedInResponse.html":{},"classes/LoginProviderClass.html":{},"classes/SocialUser.html":{}}}],["privat",{"_index":8,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/GoogleLoginProvider.html":{},"index.html":{}}}],["profil",{"_index":222,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["profile.getemail",{"_index":228,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["profile.getid",{"_index":226,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["profile.getimageurl",{"_index":229,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["profile.getnam",{"_index":227,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["project",{"_index":394,"title":{},"body":{"index.html":{}}}],["promis",{"_index":34,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{}}}],["promise((resolv",{"_index":85,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["promise.then",{"_index":232,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["properti",{"_index":7,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedInResponse.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{},"classes/LoginProviderClass.html":{},"classes/SocialUser.html":{}}}],["provid",{"_index":14,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedInResponse.html":{},"classes/LinkedinLoginProvider.html":{},"classes/LoginProviderClass.html":{},"modules/SocialLoginModule.html":{},"classes/SocialUser.html":{},"index.html":{},"overview.html":{}}}],["provideconfig",{"_index":352,"title":{},"body":{"index.html":{}}}],["provider.initialize().then((us",{"_index":78,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["provider.t",{"_index":103,"title":{},"body":{"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["provider.ts:10",{"_index":206,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["provider.ts:11",{"_index":114,"title":{},"body":{"classes/BaseLoginProvider.html":{}}}],["provider.ts:18",{"_index":150,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["provider.ts:19",{"_index":209,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["provider.ts:39",{"_index":208,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["provider.ts:4",{"_index":108,"title":{},"body":{"classes/BaseLoginProvider.html":{}}}],["provider.ts:41",{"_index":253,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["provider.ts:43",{"_index":148,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["provider.ts:47",{"_index":252,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["provider.ts:5",{"_index":282,"title":{},"body":{"interfaces/LoginProvider.html":{}}}],["provider.ts:51",{"_index":210,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["provider.ts:53",{"_index":151,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["provider.ts:57",{"_index":254,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["provider.ts:6",{"_index":109,"title":{},"body":{"classes/BaseLoginProvider.html":{},"interfaces/LoginProvider.html":{}}}],["provider.ts:60",{"_index":211,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["provider.ts:66",{"_index":152,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["provider.ts:67",{"_index":255,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["provider.ts:7",{"_index":110,"title":{},"body":{"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{}}}],["provider.ts:8",{"_index":117,"title":{},"body":{"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["provider.ts:9",{"_index":118,"title":{},"body":{"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["provider_id",{"_index":140,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["providerid",{"_index":32,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["providerobject",{"_index":87,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["providerobject.initialize().then((us",{"_index":92,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["providerobject.isiniti",{"_index":89,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["providerobject.signin().then((us",{"_index":90,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["providerobject.signout().then",{"_index":95,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["public",{"_index":138,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["pull",{"_index":398,"title":{},"body":{"index.html":{}}}],["re",{"_index":184,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["readonli",{"_index":12,"title":{},"body":{"injectables/AuthService.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["receiv",{"_index":375,"title":{},"body":{"index.html":{}}}],["refrenc",{"_index":327,"title":{},"body":{"index.html":{}}}],["reject",{"_index":86,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["reject(authservice.login_provider_not_found",{"_index":93,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["reject(err",{"_index":235,"title":{},"body":{"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["report",{"_index":396,"title":{},"body":{"index.html":{}}}],["request",{"_index":399,"title":{},"body":{"index.html":{}}}],["reset",{"_index":294,"title":{},"body":{"modules/SocialLoginModule.html":{},"overview.html":{}}}],["resolv",{"_index":96,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["resolve(facebookloginprovider.drawuser(object.assign",{"_index":185,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["resolve(this.drawus",{"_index":221,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["resolve(this.drawuser(r",{"_index":269,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["resolve(us",{"_index":91,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["respons",{"_index":149,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["response.authrespons",{"_index":199,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["response.email",{"_index":192,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["response.emailaddress",{"_index":272,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["response.firstnam",{"_index":273,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["response.id",{"_index":188,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["response.lastnam",{"_index":274,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["response.nam",{"_index":190,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["response.pictureurl",{"_index":275,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["response.statu",{"_index":178,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["response.token",{"_index":194,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["result",{"_index":97,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedInResponse.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{},"classes/LoginProviderClass.html":{},"modules/SocialLoginModule.html":{},"classes/SocialUser.html":{},"coverage.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result((r",{"_index":268,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["return",{"_index":33,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{},"index.html":{}}}],["rxjs/behaviorsubject",{"_index":58,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["rxjs/observ",{"_index":57,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["save",{"_index":339,"title":{},"body":{"index.html":{}}}],["scope",{"_index":200,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{}}}],["selector",{"_index":356,"title":{},"body":{"index.html":{}}}],["sign",{"_index":354,"title":{},"body":{"index.html":{}}}],["signin",{"_index":16,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{}}}],["signin(providerid",{"_index":29,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["signinj",{"_index":121,"title":{},"body":{"classes/BaseLoginProvider.html":{}}}],["signinjs.async",{"_index":123,"title":{},"body":{"classes/BaseLoginProvider.html":{}}}],["signinjs.onload",{"_index":127,"title":{},"body":{"classes/BaseLoginProvider.html":{}}}],["signinjs.src",{"_index":125,"title":{},"body":{"classes/BaseLoginProvider.html":{}}}],["signinjs.text",{"_index":131,"title":{},"body":{"classes/BaseLoginProvider.html":{}}}],["signinwithfb",{"_index":366,"title":{},"body":{"index.html":{}}}],["signinwithgoogl",{"_index":364,"title":{},"body":{"index.html":{}}}],["signinwithlinkedin",{"_index":368,"title":{},"body":{"index.html":{}}}],["signout",{"_index":17,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{},"index.html":{}}}],["social",{"_index":326,"title":{},"body":{"index.html":{}}}],["socialloginmodul",{"_index":287,"title":{"modules/SocialLoginModule.html":{}},"body":{"modules/SocialLoginModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["socialus",{"_index":42,"title":{"classes/SocialUser.html":{}},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedInResponse.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{},"classes/LoginProviderClass.html":{},"classes/SocialUser.html":{},"coverage.html":{},"index.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedInResponse.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{},"classes/LoginProviderClass.html":{},"modules/SocialLoginModule.html":{},"classes/SocialUser.html":{}}}],["src/.../facebook",{"_index":408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../googl",{"_index":409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../linkedin",{"_index":410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/auth.module.t",{"_index":296,"title":{},"body":{"modules/SocialLoginModule.html":{}}}],["src/auth.service.t",{"_index":5,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"coverage.html":{}}}],["src/auth.service.ts:15",{"_index":100,"title":{},"body":{"classes/AuthServiceConfig.html":{}}}],["src/auth.service.ts:16",{"_index":99,"title":{},"body":{"classes/AuthServiceConfig.html":{}}}],["src/auth.service.ts:30",{"_index":47,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth.service.ts:32",{"_index":49,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth.service.ts:34",{"_index":41,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth.service.ts:36",{"_index":44,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth.service.ts:37",{"_index":53,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth.service.ts:39",{"_index":22,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth.service.ts:58",{"_index":31,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth.service.ts:94",{"_index":35,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/entities/bas",{"_index":102,"title":{},"body":{"classes/BaseLoginProvider.html":{},"coverage.html":{}}}],["src/entities/login",{"_index":281,"title":{},"body":{"interfaces/LoginProvider.html":{},"coverage.html":{}}}],["src/entities/user.t",{"_index":237,"title":{},"body":{"classes/LinkedInResponse.html":{},"classes/LoginProviderClass.html":{},"classes/SocialUser.html":{},"coverage.html":{}}}],["src/entities/user.ts:11",{"_index":284,"title":{},"body":{"classes/LoginProviderClass.html":{}}}],["src/entities/user.ts:12",{"_index":283,"title":{},"body":{"classes/LoginProviderClass.html":{}}}],["src/entities/user.ts:13",{"_index":285,"title":{},"body":{"classes/LoginProviderClass.html":{}}}],["src/entities/user.ts:17",{"_index":242,"title":{},"body":{"classes/LinkedInResponse.html":{}}}],["src/entities/user.ts:18",{"_index":243,"title":{},"body":{"classes/LinkedInResponse.html":{}}}],["src/entities/user.ts:19",{"_index":244,"title":{},"body":{"classes/LinkedInResponse.html":{}}}],["src/entities/user.ts:2",{"_index":305,"title":{},"body":{"classes/SocialUser.html":{}}}],["src/entities/user.ts:20",{"_index":245,"title":{},"body":{"classes/LinkedInResponse.html":{}}}],["src/entities/user.ts:21",{"_index":246,"title":{},"body":{"classes/LinkedInResponse.html":{}}}],["src/entities/user.ts:3",{"_index":302,"title":{},"body":{"classes/SocialUser.html":{}}}],["src/entities/user.ts:4",{"_index":301,"title":{},"body":{"classes/SocialUser.html":{}}}],["src/entities/user.ts:5",{"_index":303,"title":{},"body":{"classes/SocialUser.html":{}}}],["src/entities/user.ts:6",{"_index":304,"title":{},"body":{"classes/SocialUser.html":{}}}],["src/entities/user.ts:7",{"_index":306,"title":{},"body":{"classes/SocialUser.html":{}}}],["src/providers/facebook",{"_index":136,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/providers/googl",{"_index":204,"title":{},"body":{"classes/GoogleLoginProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/providers/linkedin",{"_index":250,"title":{},"body":{"classes/LinkedinLoginProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":324,"title":{"index.html":{}},"body":{"index.html":{}}}],["state",{"_index":372,"title":{},"body":{"index.html":{}}}],["statement",{"_index":310,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":11,"title":{},"body":{"injectables/AuthService.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["string",{"_index":30,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedInResponse.html":{},"classes/LinkedinLoginProvider.html":{},"classes/LoginProviderClass.html":{},"classes/SocialUser.html":{}}}],["styleurl",{"_index":360,"title":{},"body":{"index.html":{}}}],["subscrib",{"_index":371,"title":{},"body":{"index.html":{}}}],["such",{"_index":380,"title":{},"body":{"index.html":{}}}],["super",{"_index":161,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["support",{"_index":333,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":401,"title":{},"body":{"modules.html":{}}}],["systemreadi",{"_index":270,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["tabl",{"_index":322,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":321,"title":{},"body":{"coverage.html":{}}}],["templateurl",{"_index":358,"title":{},"body":{"index.html":{}}}],["this._authstate.asobserv",{"_index":72,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["this._authstate.next(nul",{"_index":84,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["this._authstate.next(us",{"_index":82,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["this._us",{"_index":80,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["this._user.provid",{"_index":94,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["this.auth2",{"_index":215,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["this.auth2.currentuser.get().getauthresponse(tru",{"_index":225,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["this.auth2.currentuser.get().getbasicprofil",{"_index":223,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["this.auth2.issignedin.get",{"_index":220,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["this.auth2.signin",{"_index":231,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["this.auth2.signout().then((err",{"_index":233,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["this.auth2.then",{"_index":219,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["this.authservice.authstate.subscribe((us",{"_index":385,"title":{},"body":{"index.html":{}}}],["this.authservice.signin(facebookloginprovider.provider_id",{"_index":367,"title":{},"body":{"index.html":{}}}],["this.authservice.signin(googleloginprovider.provider_id",{"_index":365,"title":{},"body":{"index.html":{}}}],["this.authservice.signin(linkedinloginprovider.provider_id",{"_index":369,"title":{},"body":{"index.html":{}}}],["this.authservice.signout",{"_index":370,"title":{},"body":{"index.html":{}}}],["this.autologin",{"_index":70,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["this.clientid",{"_index":169,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["this.isiniti",{"_index":175,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["this.loadscript(this.loginproviderobj",{"_index":166,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["this.loggedin",{"_index":387,"title":{},"body":{"index.html":{}}}],["this.loginproviderobj.id",{"_index":162,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["this.loginproviderobj.nam",{"_index":163,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["this.loginproviderobj.url",{"_index":164,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["this.onlinkedinload",{"_index":259,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["this.provid",{"_index":73,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["this.providers.foreach((provid",{"_index":76,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["this.providers.get(providerid",{"_index":88,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["this.us",{"_index":386,"title":{},"body":{"index.html":{}}}],["token",{"_index":186,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/LinkedInResponse.html":{},"classes/LoginProviderClass.html":{},"classes/SocialUser.html":{}}}],["true",{"_index":124,"title":{},"body":{"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["type",{"_index":26,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedInResponse.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{},"classes/LoginProviderClass.html":{},"classes/SocialUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":248,"title":{},"body":{"classes/LinkedInResponse.html":{},"classes/LinkedinLoginProvider.html":{},"classes/LoginProviderClass.html":{},"classes/SocialUser.html":{},"index.html":{}}}],["url)').result((r",{"_index":279,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["usefactori",{"_index":353,"title":{},"body":{"index.html":{}}}],["user",{"_index":81,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{},"index.html":{}}}],["user.email",{"_index":191,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"index.html":{}}}],["user.id",{"_index":187,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["user.nam",{"_index":189,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"index.html":{}}}],["user.photourl",{"_index":195,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["user.provid",{"_index":79,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["user.token",{"_index":193,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["v2.9",{"_index":174,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["valu",{"_index":38,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["variabl",{"_index":318,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":173,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["via",{"_index":337,"title":{},"body":{"index.html":{}}}],["void",{"_index":116,"title":{},"body":{"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"index.html":{}}}],["welcom",{"_index":395,"title":{},"body":{"index.html":{}}}],["xfbml",{"_index":172,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["zoom",{"_index":293,"title":{},"body":{"modules/SocialLoginModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _authState\n                            \n                            \n                                    Private\n                                _user\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                LOGIN_PROVIDER_NOT_FOUND\n                            \n                            \n                                    Private\n                                providers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                signIn\n                            \n                            \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: AuthServiceConfig)\n                    \n                \n                        \n                            \n                                Defined in src/auth.service.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    AuthServiceConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignIn(providerId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth.service.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        providerId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth.service.ts:94\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _authState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _authState:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/auth.service.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _user:     SocialUser\n\n                    \n                \n                    \n                        \n                            Type :     SocialUser\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/auth.service.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            LOGIN_PROVIDER_NOT_FOUND\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LOGIN_PROVIDER_NOT_FOUND:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Login provider not found'\n                        \n                    \n                        \n                            \n                                    Defined in src/auth.service.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            providers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        providers:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth.service.ts:32\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        authState\n                    \n                \n\n                \n                    \n                        getauthState()\n                    \n                \n                            \n                                \n                                    Defined in src/auth.service.ts:37\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs/Observable';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nimport { LoginProvider } from './entities/login-provider';\nimport { SocialUser } from './entities/user';\n\nexport interface AuthServiceConfigItem {\n  id: string;\n  provider: LoginProvider;\n}\n\nexport class AuthServiceConfig {\n  providers: Map = new Map();\n  autoLogin: boolean;\n\n  constructor(providers: AuthServiceConfigItem[], autoLogin: boolean) {\n    this.autoLogin = autoLogin;\n    for (let i = 0; i ;\n\n  private _authState: BehaviorSubject = new BehaviorSubject(null);\n\n  private _user: SocialUser = null;\n  get authState(): Observable {\n    return this._authState.asObservable();\n  }\n\n  constructor(config: AuthServiceConfig) {\n    this.providers = config.providers;\n    if (config.autoLogin) {\n      this.providers.forEach((provider: LoginProvider, key: string) => {\n        if (provider) {\n          provider.initialize().then((user: SocialUser) => {\n            user.provider = key;\n            this._user = user;\n            this._authState.next(user);\n          }).catch((err) => {\n            // this._authState.next(null);\n          });\n        }\n      });\n    }\n  }\n\n  signIn(providerId: string): Promise {\n    return new Promise((resolve, reject) => {\n      let providerObject = this.providers.get(providerId);\n      if (providerObject) {\n        if (providerObject.isInitialize) {\n          providerObject.signIn().then((user: SocialUser) => {\n            user.provider = providerId;\n            resolve(user);\n\n            this._user = user;\n            this._authState.next(user);\n          });\n        } else {\n          providerObject.initialize().then((user: SocialUser) => {\n            if (user) {\n              user.provider = providerId;\n              resolve(user);\n              this._authState.next(user);\n            } else {\n              providerObject.signIn().then((user: SocialUser) => {\n                user.provider = providerId;\n                resolve(user);\n                this._user = user;\n                this._authState.next(user);\n              });\n            }\n          }).catch((err) => {\n            // this._authState.next(null);\n          });\n        }\n      } else {\n        reject(AuthService.LOGIN_PROVIDER_NOT_FOUND);\n      }\n    });\n  }\n\n  signOut(): Promise {\n    return new Promise((resolve, reject) => {\n      if (this._user && this._user.provider) {\n        let providerId = this._user.provider;\n        let providerObject = this.providers.get(providerId);\n        providerObject.signOut().then(() => {\n          this._user = null;\n          this._authState.next(null);\n          resolve();\n        }).catch((err) => {\n          this._authState.next(null);\n        });\n      } else {\n        reject(AuthService.LOGIN_PROVIDER_NOT_FOUND);\n      }\n    });\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthServiceConfig.html":{"url":"classes/AuthServiceConfig.html","title":"class - AuthServiceConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthServiceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                autoLogin\n                            \n                            \n                                providers\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(providers: AuthServiceConfigItem[], autoLogin: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/auth.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        providers\n                                                  \n                                                        \n                                                                    AuthServiceConfigItem[]\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        autoLogin\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autoLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        autoLogin:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            providers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        providers:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/auth.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs/Observable';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nimport { LoginProvider } from './entities/login-provider';\nimport { SocialUser } from './entities/user';\n\nexport interface AuthServiceConfigItem {\n  id: string;\n  provider: LoginProvider;\n}\n\nexport class AuthServiceConfig {\n  providers: Map = new Map();\n  autoLogin: boolean;\n\n  constructor(providers: AuthServiceConfigItem[], autoLogin: boolean) {\n    this.autoLogin = autoLogin;\n    for (let i = 0; i ;\n\n  private _authState: BehaviorSubject = new BehaviorSubject(null);\n\n  private _user: SocialUser = null;\n  get authState(): Observable {\n    return this._authState.asObservable();\n  }\n\n  constructor(config: AuthServiceConfig) {\n    this.providers = config.providers;\n    if (config.autoLogin) {\n      this.providers.forEach((provider: LoginProvider, key: string) => {\n        if (provider) {\n          provider.initialize().then((user: SocialUser) => {\n            user.provider = key;\n            this._user = user;\n            this._authState.next(user);\n          }).catch((err) => {\n            // this._authState.next(null);\n          });\n        }\n      });\n    }\n  }\n\n  signIn(providerId: string): Promise {\n    return new Promise((resolve, reject) => {\n      let providerObject = this.providers.get(providerId);\n      if (providerObject) {\n        if (providerObject.isInitialize) {\n          providerObject.signIn().then((user: SocialUser) => {\n            user.provider = providerId;\n            resolve(user);\n\n            this._user = user;\n            this._authState.next(user);\n          });\n        } else {\n          providerObject.initialize().then((user: SocialUser) => {\n            if (user) {\n              user.provider = providerId;\n              resolve(user);\n              this._authState.next(user);\n            } else {\n              providerObject.signIn().then((user: SocialUser) => {\n                user.provider = providerId;\n                resolve(user);\n                this._user = user;\n                this._authState.next(user);\n              });\n            }\n          }).catch((err) => {\n            // this._authState.next(null);\n          });\n        }\n      } else {\n        reject(AuthService.LOGIN_PROVIDER_NOT_FOUND);\n      }\n    });\n  }\n\n  signOut(): Promise {\n    return new Promise((resolve, reject) => {\n      if (this._user && this._user.provider) {\n        let providerId = this._user.provider;\n        let providerObject = this.providers.get(providerId);\n        providerObject.signOut().then(() => {\n          this._user = null;\n          this._authState.next(null);\n          resolve();\n        }).catch((err) => {\n          this._authState.next(null);\n        });\n      } else {\n        reject(AuthService.LOGIN_PROVIDER_NOT_FOUND);\n      }\n    });\n  }\n\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthServiceConfigItem.html":{"url":"interfaces/AuthServiceConfigItem.html","title":"interface - AuthServiceConfigItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthServiceConfigItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        provider\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                    \n                                \n                                \n                                    \n                                        provider:     LoginProvider\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LoginProvider\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs/Observable';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nimport { LoginProvider } from './entities/login-provider';\nimport { SocialUser } from './entities/user';\n\nexport interface AuthServiceConfigItem {\n  id: string;\n  provider: LoginProvider;\n}\n\nexport class AuthServiceConfig {\n  providers: Map = new Map();\n  autoLogin: boolean;\n\n  constructor(providers: AuthServiceConfigItem[], autoLogin: boolean) {\n    this.autoLogin = autoLogin;\n    for (let i = 0; i ;\n\n  private _authState: BehaviorSubject = new BehaviorSubject(null);\n\n  private _user: SocialUser = null;\n  get authState(): Observable {\n    return this._authState.asObservable();\n  }\n\n  constructor(config: AuthServiceConfig) {\n    this.providers = config.providers;\n    if (config.autoLogin) {\n      this.providers.forEach((provider: LoginProvider, key: string) => {\n        if (provider) {\n          provider.initialize().then((user: SocialUser) => {\n            user.provider = key;\n            this._user = user;\n            this._authState.next(user);\n          }).catch((err) => {\n            // this._authState.next(null);\n          });\n        }\n      });\n    }\n  }\n\n  signIn(providerId: string): Promise {\n    return new Promise((resolve, reject) => {\n      let providerObject = this.providers.get(providerId);\n      if (providerObject) {\n        if (providerObject.isInitialize) {\n          providerObject.signIn().then((user: SocialUser) => {\n            user.provider = providerId;\n            resolve(user);\n\n            this._user = user;\n            this._authState.next(user);\n          });\n        } else {\n          providerObject.initialize().then((user: SocialUser) => {\n            if (user) {\n              user.provider = providerId;\n              resolve(user);\n              this._authState.next(user);\n            } else {\n              providerObject.signIn().then((user: SocialUser) => {\n                user.provider = providerId;\n                resolve(user);\n                this._user = user;\n                this._authState.next(user);\n              });\n            }\n          }).catch((err) => {\n            // this._authState.next(null);\n          });\n        }\n      } else {\n        reject(AuthService.LOGIN_PROVIDER_NOT_FOUND);\n      }\n    });\n  }\n\n  signOut(): Promise {\n    return new Promise((resolve, reject) => {\n      if (this._user && this._user.provider) {\n        let providerId = this._user.provider;\n        let providerObject = this.providers.get(providerId);\n        providerObject.signOut().then(() => {\n          this._user = null;\n          this._authState.next(null);\n          resolve();\n        }).catch((err) => {\n          this._authState.next(null);\n        });\n      } else {\n        reject(AuthService.LOGIN_PROVIDER_NOT_FOUND);\n      }\n    });\n  }\n\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseLoginProvider.html":{"url":"classes/BaseLoginProvider.html","title":"class - BaseLoginProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseLoginProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/base-login-provider.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        LoginProvider\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                isInitialize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                initialize\n                            \n                            \n                                loadScript\n                            \n                            \n                                    \n                                signIn\n                            \n                            \n                                    \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/entities/base-login-provider.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            isInitialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isInitialize:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/entities/base-login-provider.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/entities/base-login-provider.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadScript\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadScript(obj: LoginProviderClass, onload: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/entities/base-login-provider.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    LoginProviderClass\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        onload\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            signIn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        signIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/entities/base-login-provider.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        signOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/entities/base-login-provider.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { LoginProvider } from './login-provider';\nimport { SocialUser, LoginProviderClass } from './user';\n\nexport abstract class BaseLoginProvider implements LoginProvider {\n  constructor() { }\n  abstract isInitialize: boolean;\n  abstract initialize(): Promise;\n  abstract signIn(): Promise;\n  abstract signOut(): Promise;\n\n  loadScript(obj: LoginProviderClass, onload: any): void {\n    if (document.getElementById(obj.name)) { return; }\n    let signInJS = document.createElement('script');\n    signInJS.async = true;\n    signInJS.src = obj.url;\n    signInJS.onload = onload;\n    if (obj.name === 'LINKEDIN') {\n      signInJS.async = false;\n      signInJS.text = ('api_key: ' + obj.id).replace('\\'', '');\n    }\n    document.head.appendChild(signInJS);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FacebookLoginProvider.html":{"url":"classes/FacebookLoginProvider.html","title":"class - FacebookLoginProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  FacebookLoginProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/facebook-login-provider.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseLoginProvider\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isInitialize\n                            \n                            \n                                    Public\n                                loginProviderObj\n                            \n                            \n                                    Static\n                                    Readonly\n                                PROVIDER_ID\n                            \n                            \n                                    \n                                isInitialize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                drawUser\n                            \n                            \n                                initialize\n                            \n                            \n                                signIn\n                            \n                            \n                                signOut\n                            \n                            \n                                    \n                                initialize\n                            \n                            \n                                loadScript\n                            \n                            \n                                    \n                                signIn\n                            \n                            \n                                    \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clientId: string)\n                    \n                \n                        \n                            \n                                Defined in src/providers/facebook-login-provider.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isInitialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isInitialize:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/providers/facebook-login-provider.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginProviderObj\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginProviderObj:     LoginProviderClass\n\n                    \n                \n                    \n                        \n                            Type :     LoginProviderClass\n\n                        \n                    \n                    \n                        \n                            Default value : new LoginProviderClass()\n                        \n                    \n                        \n                            \n                                    Defined in src/providers/facebook-login-provider.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            PROVIDER_ID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        PROVIDER_ID:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'FACEBOOK'\n                        \n                    \n                        \n                            \n                                    Defined in src/providers/facebook-login-provider.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            isInitialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isInitialize:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseLoginProvider\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseLoginProvider:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            drawUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        drawUser(response: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/facebook-login-provider.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        response\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     SocialUser\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/facebook-login-provider.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/facebook-login-provider.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/facebook-login-provider.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initialize()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseLoginProvider\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseLoginProvider:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadScript\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadScript(obj: LoginProviderClass, onload: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseLoginProvider\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseLoginProvider:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    LoginProviderClass\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        onload\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            signIn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        signIn()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseLoginProvider\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseLoginProvider:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        signOut()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseLoginProvider\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseLoginProvider:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseLoginProvider } from '../entities/base-login-provider';\nimport { SocialUser, LoginProviderClass } from '../entities/user';\n\ndeclare let FB: any;\n\nexport class FacebookLoginProvider extends BaseLoginProvider {\n  public isInitialize: boolean;\n  public static readonly PROVIDER_ID = 'FACEBOOK';\n  public loginProviderObj: LoginProviderClass = new LoginProviderClass();\n\n  constructor(private clientId: string) {\n    super();\n    this.loginProviderObj.id = clientId;\n    this.loginProviderObj.name = 'FACEBOOK';\n    this.loginProviderObj.url = 'https://connect.facebook.net/en_US/sdk.js';\n  }\n\n  initialize(): Promise {\n    return new Promise((resolve, reject) => {\n      this.loadScript(this.loginProviderObj, () => {\n          FB.init({\n            appId: this.clientId,\n            autoLogAppEvents: true,\n            cookie: true,\n            xfbml: true,\n            version: 'v2.9'\n          });\n          this.isInitialize = true;\n          FB.AppEvents.logPageView();\n\n          FB.getLoginStatus(function (response: any) {\n            if (response.status === 'connected') {\n              const accessToken = FB.getAuthResponse()['accessToken'];\n              FB.api('/me?fields=name,email,picture', (res: any) => {\n                resolve(FacebookLoginProvider.drawUser(Object.assign({}, {token: accessToken}, res)));\n              });\n            }\n          });\n        });\n    });\n  }\n\n  static drawUser(response: any): SocialUser {\n    let user: SocialUser = new SocialUser();\n    user.id = response.id;\n    user.name = response.name;\n    user.email = response.email;\n    user.token = response.token;\n    user.photoUrl = 'https://graph.facebook.com/' + response.id + '/picture?type=normal';\n    return user;\n  }\n\n  signIn(): Promise {\n    return new Promise((resolve, reject) => {\n      FB.login((response: any) => {\n        if (response.authResponse) {\n          const accessToken = FB.getAuthResponse()['accessToken'];\n          FB.api('/me?fields=name,email,picture', (res: any) => {\n            resolve(FacebookLoginProvider.drawUser(Object.assign({}, {token: accessToken}, res)));\n          });\n        }\n      }, { scope: 'email,public_profile' });\n    });\n  }\n\n  signOut(): Promise {\n    return new Promise((resolve, reject) => {\n      FB.logout((response: any) => {\n        resolve();\n      });\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GoogleLoginProvider.html":{"url":"classes/GoogleLoginProvider.html","title":"class - GoogleLoginProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  GoogleLoginProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/google-login-provider.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseLoginProvider\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                auth2\n                            \n                            \n                                    Public\n                                isInitialize\n                            \n                            \n                                    Public\n                                loginProviderObj\n                            \n                            \n                                    Static\n                                    Readonly\n                                PROVIDER_ID\n                            \n                            \n                                    \n                                isInitialize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                drawUser\n                            \n                            \n                                initialize\n                            \n                            \n                                signIn\n                            \n                            \n                                signOut\n                            \n                            \n                                    \n                                initialize\n                            \n                            \n                                loadScript\n                            \n                            \n                                    \n                                signIn\n                            \n                            \n                                    \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clientId: string)\n                    \n                \n                        \n                            \n                                Defined in src/providers/google-login-provider.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            auth2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth2:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/providers/google-login-provider.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isInitialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isInitialize:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/providers/google-login-provider.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginProviderObj\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginProviderObj:     LoginProviderClass\n\n                    \n                \n                    \n                        \n                            Type :     LoginProviderClass\n\n                        \n                    \n                    \n                        \n                            Default value : new LoginProviderClass()\n                        \n                    \n                        \n                            \n                                    Defined in src/providers/google-login-provider.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            PROVIDER_ID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        PROVIDER_ID:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'GOOGLE'\n                        \n                    \n                        \n                            \n                                    Defined in src/providers/google-login-provider.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            isInitialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isInitialize:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseLoginProvider\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseLoginProvider:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            drawUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndrawUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/google-login-provider.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     SocialUser\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/google-login-provider.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/google-login-provider.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/google-login-provider.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initialize()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseLoginProvider\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseLoginProvider:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadScript\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadScript(obj: LoginProviderClass, onload: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseLoginProvider\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseLoginProvider:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    LoginProviderClass\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        onload\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            signIn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        signIn()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseLoginProvider\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseLoginProvider:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        signOut()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseLoginProvider\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseLoginProvider:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseLoginProvider } from '../entities/base-login-provider';\nimport { SocialUser, LoginProviderClass } from '../entities/user';\n\ndeclare let gapi: any;\n\nexport class GoogleLoginProvider extends BaseLoginProvider {\n  public isInitialize: boolean;\n  public static readonly PROVIDER_ID = 'GOOGLE';\n  public loginProviderObj: LoginProviderClass = new LoginProviderClass();\n  private auth2: any;\n\n  constructor(private clientId: string) {\n    super();\n    this.loginProviderObj.id = clientId;\n    this.loginProviderObj.name = 'GOOGLE';\n    this.loginProviderObj.url = 'https://apis.google.com/js/platform.js';\n  }\n\n  initialize(): Promise {\n    return new Promise((resolve, reject) => {\n      this.loadScript(this.loginProviderObj, () => {\n        gapi.load('auth2', () => {\n          this.isInitialize = true;\n          this.auth2 = gapi.auth2.init({\n            client_id: this.clientId,\n            scope: 'email'\n          });\n\n          this.auth2.then(() => {\n            if (this.auth2.isSignedIn.get()) {\n              resolve(this.drawUser());\n            }\n          });\n        });\n      });\n    });\n  }\n\n  drawUser(): SocialUser {\n    let user: SocialUser = new SocialUser();\n    let profile = this.auth2.currentUser.get().getBasicProfile();\n    let authResponseObj = this.auth2.currentUser.get().getAuthResponse(true);\n    user.id = profile.getId();\n    user.name = profile.getName();\n    user.email = profile.getEmail();\n    user.photoUrl = profile.getImageUrl();\n    user.token = authResponseObj.access_token;\n    return user;\n  }\n\n  signIn(): Promise {\n    return new Promise((resolve, reject) => {\n      let promise = this.auth2.signIn();\n      promise.then(() => {\n        resolve(this.drawUser());\n      });\n    });\n  }\n\n  signOut(): Promise {\n    return new Promise((resolve, reject) => {\n      this.auth2.signOut().then((err: any) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve();\n        }\n      });\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LinkedInResponse.html":{"url":"classes/LinkedInResponse.html","title":"class - LinkedInResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  LinkedInResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/user.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emailAddress\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                pictureUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emailAddress:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/entities/user.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firstName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/entities/user.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/entities/user.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/entities/user.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pictureUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pictureUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/entities/user.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SocialUser {\n  provider: string;\n  id: string;\n  email: string;\n  name: string;\n  photoUrl: string;\n  token?: string;\n}\n\nexport class LoginProviderClass {\n  name: string;\n  id: string;\n  url: string;\n}\n\nexport class LinkedInResponse {\n  emailAddress: string;\n  firstName: string;\n  id: string;\n  lastName: string;\n  pictureUrl: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LinkedinLoginProvider.html":{"url":"classes/LinkedinLoginProvider.html","title":"class - LinkedinLoginProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  LinkedinLoginProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/linkedin-login-provider.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseLoginProvider\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isInitialize\n                            \n                            \n                                    Public\n                                loginProviderObj\n                            \n                            \n                                    Static\n                                    Readonly\n                                PROVIDER_ID\n                            \n                            \n                                    \n                                isInitialize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                drawUser\n                            \n                            \n                                initialize\n                            \n                            \n                                onLinkedInLoad\n                            \n                            \n                                signIn\n                            \n                            \n                                signOut\n                            \n                            \n                                    \n                                initialize\n                            \n                            \n                                loadScript\n                            \n                            \n                                    \n                                signIn\n                            \n                            \n                                    \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clientId: string)\n                    \n                \n                        \n                            \n                                Defined in src/providers/linkedin-login-provider.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isInitialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isInitialize:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/providers/linkedin-login-provider.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginProviderObj\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginProviderObj:     LoginProviderClass\n\n                    \n                \n                    \n                        \n                            Type :     LoginProviderClass\n\n                        \n                    \n                    \n                        \n                            Default value : new LoginProviderClass()\n                        \n                    \n                        \n                            \n                                    Defined in src/providers/linkedin-login-provider.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            PROVIDER_ID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        PROVIDER_ID:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'LINKEDIN'\n                        \n                    \n                        \n                            \n                                    Defined in src/providers/linkedin-login-provider.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            isInitialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isInitialize:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseLoginProvider\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseLoginProvider:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            drawUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndrawUser(response: LinkedInResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/linkedin-login-provider.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        response\n                                                        \n                                                                    LinkedInResponse\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     SocialUser\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/linkedin-login-provider.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onLinkedInLoad\n                            \n                            \n                        \n                    \n                \n                \n                    \nonLinkedInLoad()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/linkedin-login-provider.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/linkedin-login-provider.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/linkedin-login-provider.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initialize()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseLoginProvider\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseLoginProvider:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadScript\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadScript(obj: LoginProviderClass, onload: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseLoginProvider\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseLoginProvider:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    LoginProviderClass\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        onload\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            signIn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        signIn()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseLoginProvider\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseLoginProvider:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        signOut()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseLoginProvider\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseLoginProvider:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseLoginProvider } from '../entities/base-login-provider';\nimport { SocialUser, LoginProviderClass, LinkedInResponse } from '../entities/user';\n\ndeclare let IN: any;\n\nexport class LinkedinLoginProvider extends BaseLoginProvider {\n  public isInitialize: boolean;\n  public static readonly PROVIDER_ID = 'LINKEDIN';\n  public loginProviderObj: LoginProviderClass = new LoginProviderClass();\n\n  constructor(private clientId: string) {\n    super();\n    this.loginProviderObj.id = clientId;\n    this.loginProviderObj.name = 'LINKEDIN';\n    this.loginProviderObj.url = 'https://platform.linkedin.com/in.js';\n  }\n\n  initialize(): Promise {\n    return new Promise((resolve, reject) => {\n      this.loadScript(this.loginProviderObj, () => {\n        IN.init({\n          api_key: this.clientId,\n          authorize: true,\n          onLoad: this.onLinkedInLoad()\n        });\n        this.isInitialize = true;\n        IN.Event.on(IN, 'auth', () => {\n          if (IN.User.isAuthorized()) {\n            IN.API.Raw(\n              '/people/~:(id,first-name,last-name,email-address,picture-url)'\n            ).result((res: LinkedInResponse) => {\n              resolve(this.drawUser(res));\n            });\n          }\n        });\n\n      });\n    });\n  }\n\n  onLinkedInLoad() {\n    IN.Event.on(IN, 'systemReady', () => {\n      IN.User.refresh();\n    });\n  }\n\n  drawUser(response: LinkedInResponse): SocialUser {\n    let user: SocialUser = new SocialUser();\n    user.id = response.emailAddress;\n    user.name = response.firstName + ' ' + response.lastName;\n    user.email = response.emailAddress;\n    user.photoUrl = response.pictureUrl;\n    user.token = IN.ENV.auth.oauth_token;\n    return user;\n  }\n\n  signIn(): Promise {\n    return new Promise((resolve, reject) => {\n      IN.User.authorize(() => {\n        IN.API.Raw('/people/~:(id,first-name,last-name,email-address,picture-url)').result((res: LinkedInResponse) => {\n          resolve(this.drawUser(res));\n        });\n      });\n    });\n  }\n\n  signOut(): Promise {\n    return new Promise((resolve, reject) => {\n      IN.User.logout((response: any) => {\n        resolve();\n      }, (err: any) => {\n        reject(err);\n      });\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginProvider.html":{"url":"interfaces/LoginProvider.html","title":"interface - LoginProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/login-provider.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        isInitialize\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    initialize\n                                \n                                \n                                    signIn\n                                \n                                \n                                    signOut\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/entities/login-provider.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/entities/login-provider.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/entities/login-provider.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isInitialize\n                                    \n                                \n                                \n                                    \n                                        isInitialize:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SocialUser } from './user';\n\nexport interface LoginProvider {\n  isInitialize: boolean;\n  initialize(): Promise;\n  signIn(): Promise;\n  signOut(): Promise;\n}\n\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginProviderClass.html":{"url":"classes/LoginProviderClass.html","title":"class - LoginProviderClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginProviderClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/user.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/entities/user.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/entities/user.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/entities/user.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SocialUser {\n  provider: string;\n  id: string;\n  email: string;\n  name: string;\n  photoUrl: string;\n  token?: string;\n}\n\nexport class LoginProviderClass {\n  name: string;\n  id: string;\n  url: string;\n}\n\nexport class LinkedInResponse {\n  emailAddress: string;\n  firstName: string;\n  id: string;\n  lastName: string;\n  pictureUrl: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SocialLoginModule.html":{"url":"modules/SocialLoginModule.html","title":"module - SocialLoginModule","body":"\n                   \n\n\n\n\n  Modules\n  SocialLoginModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SocialLoginModule\n\n\n\ncluster_SocialLoginModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nSocialLoginModule\n\nSocialLoginModule\n\nSocialLoginModule -->\n\nAuthService->SocialLoginModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     AuthService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from './auth.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    AuthService\n  ]\n})\n\nexport class SocialLoginModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SocialUser.html":{"url":"classes/SocialUser.html","title":"class - SocialUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SocialUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/user.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                photoUrl\n                            \n                            \n                                provider\n                            \n                            \n                                    Optional\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/entities/user.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/entities/user.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/entities/user.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            photoUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        photoUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/entities/user.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            provider\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        provider:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/entities/user.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            token\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        token:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/entities/user.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SocialUser {\n  provider: string;\n  id: string;\n  email: string;\n  name: string;\n  photoUrl: string;\n  token?: string;\n}\n\nexport class LoginProviderClass {\n  name: string;\n  id: string;\n  url: string;\n}\n\nexport class LinkedInResponse {\n  emailAddress: string;\n  firstName: string;\n  id: string;\n  lastName: string;\n  pictureUrl: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/auth.service.ts\n            \n            \n                class\n            \n            \n                AuthServiceConfig\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    src/auth.service.ts\n            \n            \n                interface\n            \n            \n                AuthServiceConfigItem\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/entities/base-login-provider.ts\n            \n            \n                class\n            \n            \n                BaseLoginProvider\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/entities/login-provider.ts\n            \n            \n                interface\n            \n            \n                LoginProvider\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/entities/user.ts\n            \n            \n                class\n            \n            \n                LinkedInResponse\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/entities/user.ts\n            \n            \n                class\n            \n            \n                LoginProviderClass\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/entities/user.ts\n            \n            \n                class\n            \n            \n                SocialUser\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/providers/facebook-login-provider.ts\n            \n            \n                class\n            \n            \n                FacebookLoginProvider\n            \n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                    src/providers/facebook-login-provider.ts\n            \n            \n                variable\n            \n            \n                FB\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/providers/google-login-provider.ts\n            \n            \n                class\n            \n            \n                GoogleLoginProvider\n            \n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                    src/providers/google-login-provider.ts\n            \n            \n                variable\n            \n            \n                gapi\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/providers/linkedin-login-provider.ts\n            \n            \n                class\n            \n            \n                LinkedinLoginProvider\n            \n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                    src/providers/linkedin-login-provider.ts\n            \n            \n                variable\n            \n            \n                IN\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nng4 Social Login\nThis is the refrenced library from angular4-social-login.\nSocial login and authentication module for Angular 4. \nSupports authentication with Google, Linkedin and Facebook.\nGetting started\nDocumentation\ncheck out Docs\nInstall via npm\nnpm install --save zebi-ng4-social-loginImport the module\nIn your AppModule, import the SocialLoginModule\nimport {\n  SocialLoginModule, \n  AuthServiceConfig,\n  GoogleLoginProvider, \n  FacebookLoginProvider, \n  LinkedinLoginProvider\n} from 'zebi-ng4-social-login';\n\nconst CONFIG = new AuthServiceConfig([\n  {\n    id: GoogleLoginProvider.PROVIDER_ID,\n    provider: new GoogleLoginProvider('Google-OAuth-Client-Id')\n  },\n  {\n    id: FacebookLoginProvider.PROVIDER_ID,\n    provider: new FacebookLoginProvider('Facebook-App-Id')\n  },\n  {\n    id: LinkedinLoginProvider.PROVIDER_ID,\n    provider: new LinkedinLoginProvider('LINKEDIN_CLIENT_ID')\n  }\n]);\n\nexport function provideConfig() {\n  return CONFIG;\n}\n\n@NgModule({\n  declarations: [\n    ...\n  ],\n  imports: [\n    ...\n    SocialLoginModule\n  ],\n  providers: [\n    {\n      provide: AuthServiceConfig,\n      useFactory: provideConfig\n    }\n  ],\n  bootstrap: [...]\n})\nexport class AppModule { }Sign in and out users\nimport { \n  AuthService \n  FacebookLoginProvider, \n  GoogleLoginProvider,\n  LinkedinLoginProvider\n} from 'zebi-ng4-social-login';\n\n@Component({\n  selector: 'app-demo',\n  templateUrl: './demo.component.html',\n  styleUrls: ['./demo.component.css']\n})\nexport class DemoComponent implements OnInit {\n\n  constructor(private authService: AuthService) { }\n\n  signInWithGoogle(): void {\n    this.authService.signIn(GoogleLoginProvider.PROVIDER_ID);\n  }\n\n  signInWithFB(): void {\n    this.authService.signIn(FacebookLoginProvider.PROVIDER_ID);\n  }\n\n  signInWithLinkedIN(): void {\n    this.authService.signIn(LinkedinLoginProvider.PROVIDER_ID);\n  }\n\n  signOut(): void {\n    this.authService.signOut();\n  }\n\n}Subscribe to the authentication state\nYou are notified when user logs in or logs out. You receive a SocialUser object when the user logs in and a null when the user logs out. SocialUser object contains basic user information such as name, email, photo URL, etc.\nimport { AuthService } from 'zebi-ng4-social-login';\nimport { SocialUser } from 'zebi-ng4-social-login';\n\n@Component({\n  selector: 'app-demo',\n  templateUrl: './demo.component.html',\n  styleUrls: ['./demo.component.css']\n})\nexport class DemoComponent implements OnInit {\n\n  private user: SocialUser;\n  private loggedIn: boolean;\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n    this.authService.authState.subscribe((user) => {\n      this.user = user;\n      this.loggedIn = (user != null);\n    });\n  }\n\n}Display the user information\n\n\n  {{ user.name }}\n  {{ user.email }}\nBuilding with AoT\nIf you are facing issue in building your app with AoT, check this document.\nContributing to project\nyou are welcome to report an issue or creating a pull request.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        SocialLoginModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SocialLoginModule\n\n\n\ncluster_SocialLoginModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nSocialLoginModule\n\nSocialLoginModule\n\nSocialLoginModule -->\n\nAuthService->SocialLoginModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        1 injectable\n                    \n                \n            \n            \n                \n                    \n                        \n                        8 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FB   (src/.../facebook-login-provider.ts)\n                        \n                        \n                            gapi   (src/.../google-login-provider.ts)\n                        \n                        \n                            IN   (src/.../linkedin-login-provider.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/providers/facebook-login-provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            FB\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        FB:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/providers/google-login-provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            gapi\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gapi:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/providers/linkedin-login-provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            IN\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        IN:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
